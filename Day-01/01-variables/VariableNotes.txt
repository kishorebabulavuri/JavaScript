JavaScript Variables: var, let, and const


var
Scope: Function-scoped or globally scoped.

Reassignment: Can be reassigned and redeclared within its scope.

Usage: Generally discouraged in modern JavaScript due to its function scoping and hoisting issues.
 code
        var x = 10;
        x = 20; // Valid
        var x = 30; // Valid

let
Scope: Block-scoped.

Reassignment: Can be reassigned but not redeclared in the same scope.

Usage: Preferred over var for block-scoping and avoiding hoisting issues.

code
        let y = 10;
        y = 20; // Valid


const

Scope: Block-scoped.

Reassignment: Cannot be reassigned or redeclared in the same scope. It creates a constant reference.

Usage: Used for variables that should not be reassigned, like constants.

code
const z = 10;
// z = 20; // Error: Assignment to constant variable
// const z = 30; // Error: Identifier 'z' has already been declared


Key Differences:
var is function-scoped and can lead to confusing bugs due to its hoisting behavior.
let provides block-scoping and is more predictable than var, making it the preferred choice for variable declaration.
const is used for variables that should remain constant, offering block-scoping and preventing reassignment.

for more deep in these topic check it these link

https://medium.com/@kishore_lavuri/understanding-javascript-variables-var-let-and-const-ff917cf0451c