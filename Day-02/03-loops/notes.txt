Loops in JavaScript
Loops in JavaScript are used to execute a block of code multiple times until a condition is met. There are three main types of loops:

1. for Loop
The for loop is used when the number of iterations is known. It consists of three parts:

Initialization → Executes once before the loop starts.
Condition → Checked before each iteration; the loop runs while true.
Increment/Decrement → Updates the loop variable after each iteration.

Syntax:

for (initialization; condition; update) {
    // Code to execute in each loop iteration
}

Example:

for (let i = 1; i <= 5; i++) {
    console.log("Iteration:", i);
}

Explanation:

let i = 1 → Starts at 1
i <= 5 → Runs while i is ≤ 5
i++ → Increases i by 1 in each loop iteration


Output:

Iteration: 1
Iteration: 2
Iteration: 3
Iteration: 4
Iteration: 5

2. while Loop
The while loop is used when the number of iterations is unknown beforehand. It keeps running while the condition is true.

Syntax:

while (condition) {
    // Code to execute while condition is true
}


Example:

let i = 1;
while (i <= 5) {
    console.log("Iteration:", i);
    i++;  // Increment to avoid infinite loop
}
Explanation:

i = 1 → Starts at 1
i <= 5 → Runs while i is ≤ 5
i++ → Increases i in each loop iteration
Output:

Iteration: 1
Iteration: 2
Iteration: 3
Iteration: 4
Iteration: 5


3. do...while Loop
The do...while loop always runs at least once, even if the condition is false.

Syntax:

do {
    // Code to execute at least once
} while (condition);

Example:


let i = 1;
do {
    console.log("Iteration:", i);
    i++;
} while (i <= 5);

Explanation:

Runs the block at least once, even if i > 5 initially.
Then checks i <= 5, and repeats until the condition is false.

Output (same as while loop):

Iteration: 1
Iteration: 2
Iteration: 3
Iteration: 4
Iteration: 5
